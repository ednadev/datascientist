Array : 같은 데이타 타입을 가지는 서로 다른 값들이 하나의 변수로 처리되는 것

1. 선언
2. 생성
3. 초기화

배열도 객체다!

1. 선언
int[]    arr;
데이터타입  변수명

2. 생성
arr = new int[3]; // 반드시 사이즈를 명시

메모리
- Stack : arr 변수가 들어감. 아직 값은 모름
- Heap : Array 3칸이 들어감 (int의 default값인 0으로 채워서 들어간다.. 객체니까) -> 값이 채워지면 주소값이 지정된다.
--> 할당된 주소값은 Stack에 있는 arr에 들어간다.
--> Heap에 있는 값들을 arr이 가져올 수 있다.
--> 첫번째, 두번째.. 순서가 있다 => 순서가 있는 것들은 내부적으로 Index로 관리한다. arr[0], arr[1], arr[2]
--> 마지막 요소 : 마지막수 - 1

3. 초기화
arr[0] = 11;
arr[1] = 22;
arr[2] = 33;
--> 값을 덮어쓴다.


Stack에 arr2
Heap에 3칸짜리가 만들어지고 11, 22, 33 값이 들어가 있음 --> Stack에 arr2에 참조가 일어났다
Heap에 5칸짜리가 새로 만들어진다. [ , , , 44, 55] 로 들어가서 기본값이 나온 것
Stack 영역으로부터 참조가 끊어진 객체는 사용할 수 없는 객체 = 쓰레기 객체 : 여기선 3칸짜리
 --> 가비지 컬렉터가 처리해줌.. 언젠간..


* API 찾는 방법
1. 패키지 찾기
2. 클래스 찾기
3. - Method Summary에서 먼저 찾을 것은 static한지 안한지를 확인
     static하면 new를 사용하지 않아도 된다. 
   - 어떤 값을 반환하는지 확인 (void면 반환이 아닌 끝)
   