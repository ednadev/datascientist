1. Product 타입 배열 생성
Product[] pros = new Product[3];

Memory
- Stack : pros -> 이때는 객체가 아니기 때문에 기본값이 없다.
- Heap : 3칸짜리 배열 객체가 올라감 (기본값은 Product(클래스) 타입이라 기본값은 null)
    --> 주소값 지정! Stack에 있는 pros가 주소값 받음
    --> Stack 영역에 레퍼런스 변수가 Heap에 값들을 참조한다.

2. 배열 각각의 항목에 객체로 초기화
pros[0] = new Product(o, o, o)
pros[1] = new Product(o, o, o)
pros[2] = new Product(o, o, o)

실제 Memory에서는
Heap에서 H.P, SAM, LG 각각이 생성되고 주소값 지정됨
각각의 주소값이 같은 Heap에 있는 배열 객체 각각의 주소값이 할당되고 참조한다.
배열 객체 자체가 Stack이라고 생각하면 됨


* null, 주소값, 값 등이 들어간 걸 언제 들어가지는지를 확인하기




[VO] Product : 정보
-->(Product를 헤징해오고 - 필드 전체를 가져올 수도 있고, 각각으로 가져올 수도 있고) ~Service : 기능 - 완벽하게 정의된 Worker Method
--> ~Test : 객체를 메모리에 올려서 메소드를 호출하는 기능만 있어야 함


test를 웹에서 웹페이지라고 생각하면 됨 -> 출력은 test!

Test -> 서비스 객체를 만들어서 서비스의 메소드를 호출해서 출력하는 일까지 하는 일!